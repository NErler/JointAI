on:
  push:
    branches:
      - master
      - JMdevel
  pull_request:
    branches:
      - master

name: test-coverage

jobs:
  test-coverage:
    runs-on: windows-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-covr]')"

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install JAGS macOS
        if: runner.os == 'macOS'
        run: |
          rm '/usr/local/bin/gfortran'
          brew install jags

      - name: Download JAGS Windows
        if: runner.os == 'Windows'
        run: (New-Object System.Net.WebClient).DownloadFile('https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Windows/JAGS-4.3.0.exe', 'C:\JAGS-4.3.0.exe')
        shell: powershell

      - name: Install JAGS Windows
        if: runner.os == 'Windows'
        run: C:\JAGS-4.3.0.exe /S
        shell: cmd

      - name: Install dependencies
        run: |
          install.packages(c("remotes"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Test coverage
        env:
          IS_CHECK: true
        run: |
          jagshome = readRegistry("SOFTWARE\\JAGS", maxdepth = 2, view = "32-bit")
          Sys.setenv(JAGS_HOME = jagshome[["JAGS-4.3.0"]][["InstallDir"]])
          covr::codecov(quiet = FALSE, type = "all")
        shell: Rscript {0}
