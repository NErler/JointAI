[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
[1] "No variability observed in a component. Setting batch size to 1"
$m0a

Bayesian multinomial logit model fitted with JointAI

Call:
mlogit_imp(formula = M1 ~ 1, data = wideDF, n.adapt = 5, n.iter = 10, 
    seed = 2020, warn = FALSE, mess = FALSE)


Posterior summary:
                 Mean SD 2.5% 97.5% tail-prob. GR-crit MCE/SD
M12: (Intercept)    0  0    0     0          0     NaN    NaN
M13: (Intercept)    0  0    0     0          0     NaN    NaN
M14: (Intercept)    0  0    0     0          0     NaN    NaN


MCMC settings:
Iterations = 6:15
Sample size per chain = 10 
Thinning interval = 1 
Number of chains = 3 

Number of observations: 100 

$m0b

Bayesian multinomial logit model fitted with JointAI

Call:
mlogit_imp(formula = M2 ~ 1, data = wideDF, n.adapt = 5, n.iter = 10, 
    seed = 2020, warn = FALSE, mess = FALSE)


Posterior summary:
                 Mean SD 2.5% 97.5% tail-prob. GR-crit MCE/SD
M22: (Intercept)    0  0    0     0          0     NaN    NaN
M23: (Intercept)    0  0    0     0          0     NaN    NaN
M24: (Intercept)    0  0    0     0          0     NaN    NaN


MCMC settings:
Iterations = 6:15
Sample size per chain = 10 
Thinning interval = 1 
Number of chains = 3 

Number of observations: 100 

$m1a

Bayesian multinomial logit model fitted with JointAI

Call:
mlogit_imp(formula = M1 ~ C1, data = wideDF, n.adapt = 5, n.iter = 10, 
    seed = 2020, warn = FALSE, mess = FALSE)


Posterior summary:
                 Mean SD 2.5% 97.5% tail-prob. GR-crit MCE/SD
M12: (Intercept)    0  0    0     0          0     NaN    NaN
M12: C1             0  0    0     0          0     NaN    NaN
M13: (Intercept)    0  0    0     0          0     NaN    NaN
M13: C1             0  0    0     0          0     NaN    NaN
M14: (Intercept)    0  0    0     0          0     NaN    NaN
M14: C1             0  0    0     0          0     NaN    NaN


MCMC settings:
Iterations = 6:15
Sample size per chain = 10 
Thinning interval = 1 
Number of chains = 3 

Number of observations: 100 

$m1b

Bayesian multinomial logit model fitted with JointAI

Call:
mlogit_imp(formula = M2 ~ C1, data = wideDF, n.adapt = 5, n.iter = 10, 
    seed = 2020, warn = FALSE, mess = FALSE)


Posterior summary:
                 Mean SD 2.5% 97.5% tail-prob. GR-crit MCE/SD
M22: (Intercept)    0  0    0     0          0     NaN    NaN
M22: C1             0  0    0     0          0     NaN    NaN
M23: (Intercept)    0  0    0     0          0     NaN    NaN
M23: C1             0  0    0     0          0     NaN    NaN
M24: (Intercept)    0  0    0     0          0     NaN    NaN
M24: C1             0  0    0     0          0     NaN    NaN


MCMC settings:
Iterations = 6:15
Sample size per chain = 10 
Thinning interval = 1 
Number of chains = 3 

Number of observations: 100 

$m2a

Bayesian multinomial logit model fitted with JointAI

Call:
mlogit_imp(formula = M1 ~ C2, data = wideDF, n.adapt = 5, n.iter = 10, 
    seed = 2020, warn = FALSE, mess = FALSE)


Posterior summary:
                 Mean SD 2.5% 97.5% tail-prob. GR-crit MCE/SD
M12: (Intercept)    0  0    0     0          0     NaN    NaN
M12: C2             0  0    0     0          0     NaN    NaN
M13: (Intercept)    0  0    0     0          0     NaN    NaN
M13: C2             0  0    0     0          0     NaN    NaN
M14: (Intercept)    0  0    0     0          0     NaN    NaN
M14: C2             0  0    0     0          0     NaN    NaN


MCMC settings:
Iterations = 6:15
Sample size per chain = 10 
Thinning interval = 1 
Number of chains = 3 

Number of observations: 100 

$m2b

Bayesian multinomial logit model fitted with JointAI

Call:
mlogit_imp(formula = M2 ~ C2, data = wideDF, n.adapt = 5, n.iter = 10, 
    seed = 2020, warn = FALSE, mess = FALSE)


Posterior summary:
                 Mean SD 2.5% 97.5% tail-prob. GR-crit MCE/SD
M22: (Intercept)    0  0    0     0          0     NaN    NaN
M22: C2             0  0    0     0          0     NaN    NaN
M23: (Intercept)    0  0    0     0          0     NaN    NaN
M23: C2             0  0    0     0          0     NaN    NaN
M24: (Intercept)    0  0    0     0          0     NaN    NaN
M24: C2             0  0    0     0          0     NaN    NaN


MCMC settings:
Iterations = 6:15
Sample size per chain = 10 
Thinning interval = 1 
Number of chains = 3 

Number of observations: 100 

$m3a

Bayesian linear model fitted with JointAI

Call:
lm_imp(formula = C1 ~ M1, data = wideDF, n.adapt = 5, n.iter = 10, 
    seed = 2020, warn = FALSE, mess = FALSE)


Posterior summary:
            Mean SD 2.5% 97.5% tail-prob. GR-crit MCE/SD
(Intercept)    0  0    0     0          0     NaN    NaN
M12            0  0    0     0          0     NaN    NaN
M13            0  0    0     0          0     NaN    NaN
M14            0  0    0     0          0     NaN    NaN

Posterior summary of residual std. deviation:
         Mean SD 2.5% 97.5% GR-crit MCE/SD
sigma_C1    0  0    0     0     NaN    NaN


MCMC settings:
Iterations = 1:10
Sample size per chain = 10 
Thinning interval = 1 
Number of chains = 3 

Number of observations: 100 

$m3b

Bayesian linear model fitted with JointAI

Call:
lm_imp(formula = C1 ~ M2, data = wideDF, n.adapt = 5, n.iter = 10, 
    seed = 2020, warn = FALSE, mess = FALSE)


Posterior summary:
            Mean SD 2.5% 97.5% tail-prob. GR-crit MCE/SD
(Intercept)    0  0    0     0          0     NaN    NaN
M22            0  0    0     0          0     NaN    NaN
M23            0  0    0     0          0     NaN    NaN
M24            0  0    0     0          0     NaN    NaN

Posterior summary of residual std. deviation:
         Mean SD 2.5% 97.5% GR-crit MCE/SD
sigma_C1    0  0    0     0     NaN    NaN


MCMC settings:
Iterations = 6:15
Sample size per chain = 10 
Thinning interval = 1 
Number of chains = 3 

Number of observations: 100 

$m4a

Bayesian multinomial logit model fitted with JointAI

Call:
mlogit_imp(formula = M1 ~ M2 + O2 * abs(C1 - C2) + log(C1), data = wideDF, 
    n.adapt = 5, n.iter = 10, monitor_params = list(other = "p_M1"), 
    seed = 2020, warn = FALSE, mess = FALSE)


Posterior summary:
                      Mean SD 2.5% 97.5% tail-prob. GR-crit MCE/SD
M12: (Intercept)         0  0    0     0          0     NaN    NaN
M12: M22                 0  0    0     0          0     NaN    NaN
M12: M23                 0  0    0     0          0     NaN    NaN
M12: M24                 0  0    0     0          0     NaN    NaN
M12: O22                 0  0    0     0          0     NaN    NaN
M12: O23                 0  0    0     0          0     NaN    NaN
M12: O24                 0  0    0     0          0     NaN    NaN
M12: abs(C1 - C2)        0  0    0     0          0     NaN    NaN
M12: log(C1)             0  0    0     0          0     NaN    NaN
M12: O22:abs(C1 - C2)    0  0    0     0          0     NaN    NaN
M12: O23:abs(C1 - C2)    0  0    0     0          0     NaN    NaN
M12: O24:abs(C1 - C2)    0  0    0     0          0     NaN    NaN
M13: (Intercept)         0  0    0     0          0     NaN    NaN
M13: M22                 0  0    0     0          0     NaN    NaN
M13: M23                 0  0    0     0          0     NaN    NaN
M13: M24                 0  0    0     0          0     NaN    NaN
M13: O22                 0  0    0     0          0     NaN    NaN
M13: O23                 0  0    0     0          0     NaN    NaN
M13: O24                 0  0    0     0          0     NaN    NaN
M13: abs(C1 - C2)        0  0    0     0          0     NaN    NaN
M13: log(C1)             0  0    0     0          0     NaN    NaN
M13: O22:abs(C1 - C2)    0  0    0     0          0     NaN    NaN
M13: O23:abs(C1 - C2)    0  0    0     0          0     NaN    NaN
M13: O24:abs(C1 - C2)    0  0    0     0          0     NaN    NaN
M14: (Intercept)         0  0    0     0          0     NaN    NaN
M14: M22                 0  0    0     0          0     NaN    NaN
M14: M23                 0  0    0     0          0     NaN    NaN
M14: M24                 0  0    0     0          0     NaN    NaN
M14: O22                 0  0    0     0          0     NaN    NaN
M14: O23                 0  0    0     0          0     NaN    NaN
M14: O24                 0  0    0     0          0     NaN    NaN
M14: abs(C1 - C2)        0  0    0     0          0     NaN    NaN
M14: log(C1)             0  0    0     0          0     NaN    NaN
M14: O22:abs(C1 - C2)    0  0    0     0          0     NaN    NaN
M14: O23:abs(C1 - C2)    0  0    0     0          0     NaN    NaN
M14: O24:abs(C1 - C2)    0  0    0     0          0     NaN    NaN


MCMC settings:
Iterations = 6:15
Sample size per chain = 10 
Thinning interval = 1 
Number of chains = 3 

Number of observations: 100 

$m4b

Bayesian multinomial logit model fitted with JointAI

Call:
mlogit_imp(formula = M1 ~ ifelse(as.numeric(M2) > as.numeric(O1), 
    1, 0) * abs(C1 - C2) + log(C1), data = wideDF, n.adapt = 5, 
    n.iter = 10, monitor_params = list(other = "p_M1"), seed = 2020, 
    warn = FALSE, mess = FALSE)


Posterior summary:
                                                                Mean SD 2.5%
M12: (Intercept)                                                   0  0    0
M12: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                 0  0    0
M12: abs(C1 - C2)                                                  0  0    0
M12: log(C1)                                                       0  0    0
M12: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)    0  0    0
M13: (Intercept)                                                   0  0    0
M13: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                 0  0    0
M13: abs(C1 - C2)                                                  0  0    0
M13: log(C1)                                                       0  0    0
M13: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)    0  0    0
M14: (Intercept)                                                   0  0    0
M14: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                 0  0    0
M14: abs(C1 - C2)                                                  0  0    0
M14: log(C1)                                                       0  0    0
M14: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)    0  0    0
                                                                97.5%
M12: (Intercept)                                                    0
M12: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                  0
M12: abs(C1 - C2)                                                   0
M12: log(C1)                                                        0
M12: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)     0
M13: (Intercept)                                                    0
M13: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                  0
M13: abs(C1 - C2)                                                   0
M13: log(C1)                                                        0
M13: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)     0
M14: (Intercept)                                                    0
M14: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                  0
M14: abs(C1 - C2)                                                   0
M14: log(C1)                                                        0
M14: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)     0
                                                                tail-prob.
M12: (Intercept)                                                         0
M12: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                       0
M12: abs(C1 - C2)                                                        0
M12: log(C1)                                                             0
M12: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)          0
M13: (Intercept)                                                         0
M13: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                       0
M13: abs(C1 - C2)                                                        0
M13: log(C1)                                                             0
M13: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)          0
M14: (Intercept)                                                         0
M14: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                       0
M14: abs(C1 - C2)                                                        0
M14: log(C1)                                                             0
M14: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)          0
                                                                GR-crit MCE/SD
M12: (Intercept)                                                    NaN    NaN
M12: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                  NaN    NaN
M12: abs(C1 - C2)                                                   NaN    NaN
M12: log(C1)                                                        NaN    NaN
M12: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)     NaN    NaN
M13: (Intercept)                                                    NaN    NaN
M13: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                  NaN    NaN
M13: abs(C1 - C2)                                                   NaN    NaN
M13: log(C1)                                                        NaN    NaN
M13: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)     NaN    NaN
M14: (Intercept)                                                    NaN    NaN
M14: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0)                  NaN    NaN
M14: abs(C1 - C2)                                                   NaN    NaN
M14: log(C1)                                                        NaN    NaN
M14: ifelse(as.numeric(M2) > as.numeric(O1), 1, 0):abs(C1 - C2)     NaN    NaN


MCMC settings:
Iterations = 6:15
Sample size per chain = 10 
Thinning interval = 1 
Number of chains = 3 

Number of observations: 100 

